# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/refs/heads/master/src/schemas/json/github-action.json
name: Certora Rust Setup Action
description: |-
  This GitHub Action sets up the Rust toolchain and installs the `cargo-certora-sbf` tool.
  It allows you to specify the Rust version, additional versions, and options for the Certora SBF tool.
  For more information, see https://github.com/Certora/cargo-certora-sbf and
  https://docs.certora.com/en/latest/docs/solana/installation.html.

branding:
  color: blue
  icon: cloud-lightning

inputs:
  version:
    required: false
    default: "stable"
    description: |-
      The version of Rust to install. If not specified, the latest stable version will be used.
      The minimum supported version is `1.82.0`.

    additional-versions:
      required: false
      default: ""
      description: |-
        Additional versions of Rust to install, separated by spaces. Example: `1.75 1.79`.

    certora-sbf-version:
      required: false
      default: ""
      description: |-
        The version of `cargo-certora-sbf` to install. If not specified, the latest version will be used.

    certora-sbf-options:
      required: false
      default: ""
      description: |-
        Additional options to pass to the `cargo certora-sbf` command. This can be used to specify
        additional flags or configurations for the Certora SBF tool. See https://github.com/Certora/cargo-certora-sbf
        for more details on available options.

runs:
  using: composite
  steps:
    - uses: actions/cache@v4
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - shell: bash
      run: |
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        export PATH="$HOME/.cargo/bin:$PATH"

        if ! command -v rustup &>/dev/null; then
          curl -sSfL --proto '=https' --tlsv1.2 --retry 10 --retry-connrefused https://sh.rustup.rs | sh -s -- --default-toolchain none -y
        fi

        if [ -n '${{ inputs.certora-sbf-version }}' ]; then
          CERTORA_SBF_NAME="cargo-certora-sbf@${{ inputs.certora-sbf-version }}"
        else
          CERTORA_SBF_NAME="cargo-certora-sbf"
        fi

        rustup toolchain install '${{ inputs.version }}' --profile minimal
        cargo '+${{ inputs.version }}' install --list | grep -q cargo-certora-sbf || cargo '+${{ inputs.version }}' install "${CERTORA_SBF_NAME}"

        if [ -n '${{ inputs.additional-versions }}' ]; then
          rustup toolchain install "${{ inputs.additional-versions }}" --profile minimal
        fi

    - shell: bash
      run: |
        # Call certora-sbf command if CERTORA_SBF_BUILD is not set
        if [ -z "${CERTORA_SBF_BUILD}" ]; then
          cargo '+${{ inputs.version }}' certora-sbf --no-build ${{ inputs.certora-sbf-options }}
          echo "CERTORA_SBF_BUILD=true" >> $GITHUB_ENV
        fi
